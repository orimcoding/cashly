import React, { useState, useEffect } from "react";
import AnimatedPage from "../components/AnimatedPage";
import Sidebar from "../components/Sidebar";

function AIInsightsPage() {
  const [insights, setInsights] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // Fetch insights data from API
  useEffect(() => {
    const fetchInsights = async () => {
      try {
        setLoading(true);
        const response = await fetch("https://api.example.com/ai-insights");
        if (!response.ok) {
          throw new Error("Failed to fetch insights");
        }
        const data = await response.json();
        setInsights(data);
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchInsights();
  }, []);

  return (
    <AnimatedPage>
      <div className="flex">
        <Sidebar />
        <div className="flex-grow p-6" style={{ backgroundColor: "#1C1C1E", color: "#E0E0E0" }}>
          <h1 className="text-4xl font-bold text-green-500 text-left mb-8">AI Insights</h1>
          <p className="text-gray-400 mb-8 text-left">
            Discover actionable insights generated by our AI.
          </p>

          {loading && (
            <p className="text-gray-400 text-center">Loading insights...</p>
          )}

          {!loading && error && (
            <p className="text-red-500 text-center mb-8">{error}</p>
          )}

          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {insights.length > 0 ? (
              insights.map((insight, index) => (
                <div
                  key={index}
                  className="bg-[#262626] p-6 rounded-lg shadow-md hover:shadow-lg transition"
                >
                  <h2 className="text-xl font-semibold text-green-500 mb-2">
                    {insight.title}
                  </h2>
                  <p className="text-gray-300 text-sm">{insight.description}</p>
                  <div className="mt-4">
                    <a
                      href={insight.link}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-sm text-green-400 underline hover:text-green-500"
                    >
                      Learn more
                    </a>
                  </div>
                </div>
              ))
            ) : (
              !loading && (
                <p className="text-gray-400 text-center">
                  No insights available at the moment.
                </p>
              )
            )}
          </div>

          {/* Add Card Manually for Testing */}
          <div className="mt-10 text-center">
            <button
              onClick={() =>
                setInsights([
                  ...insights,
                  {
                    title: "New AI Insight",
                    description: "This is a manually added insight for testing.",
                    link: "#",
                  },
                ])
              }
              className="px-6 py-3 rounded bg-green-500 text-black font-bold hover:bg-green-600"
            >
              Add Test Card
            </button>
          </div>
        </div>
      </div>
    </AnimatedPage>
  );
}

export default AIInsightsPage;
